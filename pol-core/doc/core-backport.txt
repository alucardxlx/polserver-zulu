optimized string.format() to work about 20% faster

string .length
       .startswith
       .startswith_ic
       .base64_decode
       .base64_encode
       .obfuscate
       .join
       .find
       .equals_ic
       .getstringzlibbed

GetSubTileCoord(x, y, z);

SVN 821 Turley: first check boundary before accessing it
22 June, 2014: CacheGetKeys()
19 June, 2014: SendSysMessageUC() accepts a string or array as a message argument

05 June, 2014: bresenham circle algorithm / Midpoint circle algorithm
    // builds a bresenham circle around y0, y0
    GetMidpointCircleCoords(x0, y0, radius) -> array of coord structs

Changed npc search range for leftarea events from 32 to 33, because enabledevents lets you use up to 32 so in that case leftarea event will never be signalled because it should signalled on dist 33 from the npc

09-18-2013 Tomi(675):
    Added:   cfgfile::GetConfigIntArray, works the same way as 
	GetConfigStringArray but returns an array of ints instead of strings
(619) Tomi:
	Pol doesnt send "I am frozen" messages anymore when paralyzed, 
	now it sends in all those cases "I am paralyzed" messages

11-26-2011 Tomi:
    Changed: CascZ( str ) to CascZ( str, nullterm := 0 )
         if nullterm 1 it adds the terminating 0 in the end of array.
    Note:	 Recompile of scripts needed.
    AnDenix remark: it actually converts to an array of UC values now, not ASCII

01-16-2012 Turley (496):
    SpeedUp for uoconvert

01-15-2010 Turley (197):
     Added: (Tomi) chr priv "runwhilestealth" you can run while you are in stealth for as many stealthsteps you have

30 декабря 2011 г. 15:53:10 turley (459):	
	fix crash in CChrZ if an arrayelem is invalid

12-05-2011 Tomi (406):
    Fixed:  Door methods .open() and .close() were working opposite what they should.

11-29-2011 Tomi (386):
  Added:   Opengraphic itemdesc entry for Doors ( optional parameter, no need to define if you dont want to use the built in methods )
  Changed: how built in .open() .close() and .toggle() methods works. The now read the graphic what to open to from itemdesc instead of just checking with & 0x1.
           this makes those methods works for new doors too and not only T2A era doors.

AnDenixa:
    internal webserver now accepts filenames that contain "-"

AnDenixa:
    String.base64_encode()
    String.base64_decode()

260: child_threads was uninitialized

09-06-2010 Turley:
     Added: TinyXML based xml reading/writing
     Added: file::OpenXMLFile(filename)
             opens given filename and returns XMLFile object
             fileaccess.cfg is checked
            file::CreateXMLFile()
             creates an empty XMLFile object
            XMLFile.setxmldeclaration(string version, string encoding, string standalone)
             sets xmldeclaration eg <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
            XMLFile.appendxmlnode(string value, struct{attributes})
             appends Node with name value and given attributes (key=name, value=value)
            XMLFile.appendxmlcomment(string value)
             appends Comment
            XMLFile.removexmlnode(string value)
             removes first node of given value
            XMLFile.savexml(string filename)
             saves to filename
             fileaccess.cfg is checked
            XMLFile.xmltostring([string indent])
             returns the xml file as String with given indent string {default "\t"}
            XMLFile[string] returns first node of given name
            XMLFile[integer] returns node of given index (1-based)
     Added: XMLNode object
            XMLNode.attributes
             returns XMLAttributes object
            XMLNode.type
             returns type string 
             (XMLComment, XMLDeclaration, XMLDocument, XMLElement, XMLText, XMLTypeCount, XMLUnknown)
            XMLNode.firstxmlchild([string value])
             returns first child or first child of given name
            XMLNode.nextxmlsibling([string value])
             returns next sibling, or next sibling of given name
            XMLNode.appendxmlnode(string value, struct{attributes})
             appends Node with name value and given attributes (key=name, value=value)
            XMLNode.appendxmlcomment(string value)
             appends Comment
            XMLNode.setxmlattribute(struct{attributes})
             sets attributes for node
            XMLNode.removexmlattribute(string key)
             removes attribute of given key
            XMLNode.removexmlnode(string value)
             removes first node of given value
            XMLNode.appendxmltext(string text)
             appends text to node
            XMLNode[string] returns first node of given name
            XMLNode[integer] returns node of given index (1-based)
     Added: XMLAttributes object
            XMLAttributes.propnames()
             returns Array of all attribute names
            XMLAttributes[string] returns value of given attribute name
     Added: foreach loop support:
            XMLFile, XMLNode: iterates over all child Nodes
            iterator is XMLNode object, "_iterator_iter" is integer index
            XMlAttributes: iterates over all attributes
            iterator is a struct with key=attributename, value=attributevalue
            "_iterator_iter" is integer index
      Note: small examples:
            one way to read an xml file:
            <?xml version="1.0" ?>
            <root>
             <Hello>World</Hello>
             <!--Comment-->
             <nodetwo i="1" />
            </root>
            var file:=OpenXMLFile("helloworld.xml");
            parsenode(file,"");
            function parsenode(node,i)
             foreach blubb in node
              syslog(i+cstr(blubb)+" ["+blubb.type+"] ("+cstr(_blubb_iter)+")");
              parseattrib(blubb,i+"-");
              parsenode(blubb,i+" ");
             endforeach
            endfunction

            function parseattrib(node,i)
             foreach ele in (node.attributes)
              syslog(i+cstr(ele)+" ("+_ele_iter+")");
             endforeach
            endfunction
            
            one way how to create such an file:
            var file:=CreateXMLFile();
            file.setxmldeclaration("1.0","","");
            file.appendxmlnode("root");
            file["root"].appendxmlnode("Hello");
            file["root"]["Hello"].appendxmltext("World");
            file["root"].appendxmlcomment("Comment");
            file["root"].appendxmlnode("nodetwo",struct{i:=1});
            file.savexml("helloworld.xml");

11-22-2011 Kevin (364):
  			New eScript objects: BSQLConnection, BSQLResultSet, BSQLRow 
  			Added several new sql module functions:
  				mysql_connect(host,username,password);
				mysql_query(connection,query);
				mysql_fetch_row(result);
				mysql_affected_rows(result);
				mysql_num_fields(result);
				mysql_num_rows(result);
				mysql_select_db(connection,database);
				mysql_field_name(result,column_index);
				mysql_free_result(result);
				mysql_close(connection);
			In order to build with MySQL support, define the HAVE_MYSQL preprocessor directive in your build configuration.
			You must have the MySQL headers and libraries installed. 
			Only really tested with dynamically linking mysql libraries on Linux.
			
  			Implemented os::OpenConnection() to create outgoing TCP/IP connections. 
  			
  Changed:	runecl/runecl.cpp
  			Added the sql module to runecl to allow quick testing

  Changed:	pol/uoscrobj.cpp pol/mobile/charactr.cpp pol/mobile/character.h bscript/parser.cpp bscript/objmembers.h
  			Added read/write property "mountedsteps" for mobiles. Represents number of steps taken while character was mounted.

  Changed:	bscript/parser.cpp
  			Declaring an array only using "{}" will show a compiler warning; please explicitly state 'array', 'struct', or 'dictionary' 
  Changed:	pol/pol.cpp
  			If using Linux, remove pol.pid on shutdown of pol.

  Changed:	pol/uoexec.h pol/scrsched.cpp
  			Added script option "AUXSVC_ASSUME_STRING" which will allow aux service connections to send and receive non-packed strings.

  Changed:	ecompile/ecompile.cpp
  			If using Linux, a slash ("/") cannot be used to define ecompile options to allow support for absolute filenames.

  Changed:	bscript/object.cpp bscript/bobject.h
  			Implemented array operation MultiSubscript. Will return a splice of an array, eg:
  				array{"a","b","c","d","e"}[2,4] will return array{"b","c","d"}
  				 

02-16-2010 Turley (212):
     Fixed: Several small memoryleaks (ListTextCommands())

02-03-2010 Turley (209):
	Added: MethodScript support for mobiles
    		NPC: npcdesc.cfg MethodScript entry
            Character: uoclient.cfg section "General" MethodScript entry

06-17-2013 Kevin (628):
  Fixed:      adding missing mysql_close() entry to sql.em
  Fixed:      OpenSellWindow() "Buyable" container wasn't actually restricting what entries showed 

14 April, 2013 andenixa:
  Added ListMobilesInBox() to uo.em and uomod.cpp

combat.cfg: CoreAttackEffects, default 1 - should the core play any animation, sounds or projectile
effects on each hit

02-20-2013 Tomi (624):
  Fixed:      When changing graphic of a lightsource item, it now changes correctly the facing too.
  Fixed:      Status bar now shows for weapon mindamage ( id.mindamage + dmg_mod ) and for maxdamage ( id.maxdamage + dmg_mod )


(625) * Fixed a script breaker caused by inserting new TypeOfInt() constants in the middle of the Enum. Moved SQL Types to end of list.
+ Added SQL entries to the Basic.EM since were missing.

(611): Added const REALM_BRITANNIA_ALT to uo.em

(311): fixed "leak" inside unloadconfigfiles

15-12-2012 (614): (dsourc) Items now get their facing from tiledata flag if no itemdesc entry is found

os::wait_for_event() now accepts float parameters

Added array.remove(value) remove an object from the array. Returns 1 on success, 0 on failure.
Added array.join(sep : string) join all the elements in the array by separater sep. Returns a resulting string.
Added array.any() returns 1 if any element is true
Added array.all() returns 1 if all elements are true, 
	i.e. {1, 2, "test"}.all(): 1, {0, 1, "test"}.all(): 0
Added array.pop()
Added array.poprandom()
Added array.sortby()

12-05-2012 Tomi:
  Changed:    UO:ListMobilesNearLocationEx added 2 new flags LISTEX_FLAG_PLAYERS_ONLY and LISTEX_FLAG_NPC_ONLY

setting an equipped item on NPC to movable 0 will make it visible on the corpse but invisible in the corpse, same as hair and beard have worked until now

Fixed: enter/leave-events for NPCs (OWHorus)
Fixed: diagonal moves in npc::CanMove() and uo::FindPath() (OWHorus)

Changed:    SplitWords( str, delimiter := " ", max_split := -1 )
	it has now an additional parameter max_split, if given it limits the number of times that a string will be split
	default: -1 no limit
	(Patch submitted by andenixa)

08-20-2010 Turley (263):
     Fixed: util:StrFormatTime() checks if format string is correct and if not returns "Invalid Format String." error
            instead of server crash

02-15-2011 Turley:
   Changed: "in" keyword now returns the arrayindex or 0 if no match was found

02-04-2010 Turley (210):
     Added: polcfg:DiscardOldEvents 1/0 {default 0}
            if set instead of discarding new event if queue is full it discards oldest event and adds the new event
   Changed: "Event queue is full.." only prints if polcfg.LogLevel >= 11

Turley: 
   Fixed: uo::RestartScript() wakes up old script so it stops immediately

Fixed memory leak in cfgfile::GetConfigStringDictionary(...)

fixed RequestInpucUC for eg russian chars

Turley (298): fixed systemtray icon remove

01-01-2010 Nando:
     Added: (Tomi) New itemdesc property "StackLimit", defines the maximum stack
            of that item (lower than 60k). If not defined, will default to 60000.